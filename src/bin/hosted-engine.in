#!/bin/sh

HOSTED_ENGINE_CONF='/etc/ovirt-hosted-engine/hosted-engine.conf'
PKI_GUIDE_URL='https://fedoraproject.org/wiki/QA:Testcase_Virtualization_Manually_set_spice_listening_port_with_TLS_port_set'

if [ -r "${HOSTED_ENGINE_CONF}" ] ; then
    source "${HOSTED_ENGINE_CONF}"
fi

rc=1

usage() {
    cat << __EOF__
Usage: $0
    --help
        show this help.
    --deploy
        run ovirt-hosted-engine deployment
    --vm-start
        start VM on this host
    --vm-shutdown
        gracefully shutdown the VM on this host
    --vm-poweroff
        forcefully poweroff the VM on this host
    --vm-status
        VM status according to sanlock
    --add-console-password=<password>
        Create a temporary password for vnc/spice connection
    --check-liveliness
        Checks liveliness page of engine
    --connect-storage
        Connect the storage domain
    --start-pool
        Start the storage pool manually


__EOF__
    exit $rc
}

if [ -z "$1" ] ; then
    usage
fi

while [ -n "$1" ]; do
    x="$1"
    v="${x#*=}"
    shift
    case "${x}" in
        --deploy)
            exec @datadir@/ovirt-hosted-engine-setup/scripts/ovirt-hosted-engine-setup "$@"
        ;;
        --vm-start)
            # TODO: Check first the sanlock status, and if allows:
            if [ -r "${conf}" ] ; then
                vdsClient -s localhost create "${conf}"
            else
                echo "You must run --deploy first"
            fi
        ;;
        --vm-shutdown)
            if [ -n "${vmid}" ] ; then
                vdsClient -s localhost shutdown "${vmid}" 120 "VM is shutting down!"
            else
                echo "You must run --deploy first"
            fi
        ;;
        --vm-poweroff)
            if [ -n "${vmid}" ] ; then
                vdsClient -s localhost destroy "${vmid}"
            else
                echo "You must run --deploy first"
            fi
        ;;
        --vm-status)
            echo "This option is not yet supported"
        ;;
        --add-console-password=*)
            if [ -n "${vmid}" ] ; then
                vdsClient -s localhost setVmTicket "${vmid}" "${v}" 120
            else
                echo "You must run --deploy first"
            fi
        ;;
        --check-liveliness)
            python -m ovirt_hosted_engine_setup.check_liveliness
        ;;
        --connect-storage)
            if [ "${domainType}" == "nfs" ] ; then
                storageType=1
            elif [ "${domainType}" == "glusterfs" ] ; then
                storageType=7
            else
                echo "Storage type not supported: ${domainType}"
                exit 1
            fi
            echo "Connecting Storage Server"
            vdsClient -s localhost connectStorageServer \
                ${storageType} \
                ${spUUID} \
                connection=${storage},iqn=,portal=,user=kvm,password=,id=${connectionUUID},port=
        ;;
        --start-pool)
            echo "Connecting Storage Pool"
            vdsClient -s localhost connectStoragePool \
                ${spUUID} \
                ${host_id} \
                ${spUUID} \
                ${sdUUID} \
                1
            echo "Starting SPM"
            vdsClient -s localhost spmStart \
                ${spUUID} \
                -1 \
                -1 \
                -1 \
                false \
                250 \
                3
            echo "Activating Storage Domain"
            vdsClient -s localhost activateStorageDomain \
                ${sdUUID} \
                ${spUUID}
        ;;
        --console)
            if [ "${console}" == "vnc" ] ; then
                echo "Use the password you've set using --add-console-password for logging in"
                exec /usr/bin/remote-viewer vnc://localhost:5900
            elif [ "${console}" == "qxl" ] ; then
                if [ ! -r "${ca_cert}" ] ; then
                    echo "Missing spice PKI certificate"
                    echo "You can find a guide on how to generate PKI certificate at the following URL:"
                    echo "${PKI_GUIDE_URL}"
                    exit 1
                fi
                exec /usr/bin/remote-viewer \
                    --spice-ca-file=${ca_cert} \
                    spice://localhost?tls-port=5900 \
                    --spice-host-subject="${ca_subject}"
            fi
        ;;
        --help)
            rc=0
            usage
        ;;
        *)
            echo "Invalid option '${x}'" >&2
            usage
        ;;
    esac
done
